@import "syntax-variables";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.source.css {

  .punctuation {
    &.separator,
    &.terminator {
      color: @syntax-text-color;
    }
    &.property-list.begin,
    &.property-list.end {
      color: @red;
    }
    &.section.function {
      color: @cyan;
    }
  }

  .entity.name {
    color: @green;
  }
  .attribute-name.class,
  .id {
    color: @orange;
  }
  .pseudo-element,
  .pseudo-class {
    color: @orange;
  }

  .property-value {
    color: @cyan;
  }
  .constant.numeric {
    color: @cyan;
    .unit {
      color: @cyan;
    }
  }
  .rgb-value {
    color: @cyan;
  }
  .support.constant {
    color: @cyan;
    &.media {
      color: @red;
    }
  }

  .keyword.important {
    color: @red;
  }

}
// Less/Sass should have their own files,
// but for just a single override, here should be fine too
.source.less,
.source.scss {
  .keyword.unit {
    color: @cyan;
  }
}

.source.python {
  .entity {
    color: @syntax-text-color;

    &.name.function {
      color: @green;
    }
    // class name color
    &.name.type.class.python {
      color: @blue2;
    }

    &.other {
      color: darken(@yellow, 20%);
    }
    &.class {
        color: @lime;
    }
  }

  .comment {
      &.line.number-sign.python {
          color: darken(@light-gray, 5%);
      }
  }

  .constant {
      color: @green2;

      &.language.python {
          color: @pink;
      }

      &.character.format.placeholder.other.python {
          color: lighten(@green, 15%);
      }
  }

  .keyword {
      &.control.import.python {
          color: darken(@orange, 10%);
      }
      &.control.flow.python {
          color: @orange2;
      }
      &.operator.assignment.python {
          color: darken(@lime, 20%);
      }
      &.operator.logical.python {
          color: darken(@lime, 10%);
      }
      &.operator.arithmetic.python {
          color: @yellow;
      }
  }

  .meta {
      // function name color
      .function.python {
          color: @green;
      }
      .function-call-python {
          color: @syntax-text-color;
      }
      // class
      .class.python {
          color: @blue1;
          font-style: italic;
      }
      // class ()
      //.class.inheritance.python {
        //  color: @blue1;
      //}
      &.require {
    color: @red;
  }
  }

  .punctuation {
      &.definition.inheritance {
          color: @blue2;
      }
      // quotation marks from doc string
      &.definition.string {
          color: @cyan;
          font-style: oblique;
          font-weight: bold;
      }
  }

  .storage {
      color: @syntax-text-color;

      &.type.function.python {
          color: @blue2;
      }

      &.class.inheritance {
          color: @syntax-text-color;
      }
  }

  .string {
      // actual doc string
      &.quoted.docstring.multi.python {
          color: @very-light-gray;
          font-style: italic;
      }
      &.quoted.single.python {
          color: @amber;
      }
      &.regexp {
          color: @red;
      }
  }

  .support {
      &.function.magic.python {
          color: @lime;
          font-weight: bold;
      }
      &.variable.magic.python {
          color: @lime;
      }
      &.type.python {
          color: darken(@blue1, 5%);
      }
      &.function.builtin {
          color: lighten(@blue1, 5%);
      }
  }

  .variable {
      &.parameter.function.language.python {
          color: @syntax-text-color
      }
      // self variable
      &.language.special.self.python {
          color: @yellow;
      }
      &.parameter.function-call.python {
          color: @blue2;
      }
  }

    atom-text-editor .search-results .marker .region,
    :host .search-results .marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
    }

    atom-text-editor .search-results .marker.current-result .region,
    :host .search-results .marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
    }
}
